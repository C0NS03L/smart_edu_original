<head>
  <title>Subscriptions</title>
  <script
    src="https://cdn.omise.co/omise.js"
    integrity="sha384-Ue+Uj0J/1ZGITiuYUvQgZGRWgS8ZuGIbVslPEqNh8EDJviXdDh2uWdudKLcFQBcm"
    crossorigin="anonymous"
    defer
  ></script>
</head>
<% content_for :title, t('subscriptions.index.page_title') %>

<section class="py-12" id="pricing">
  <%= render 'shared/flash' %>
  <div class="container mx-auto px-6">
    <h2 class="mb-8 text-center text-4xl font-bold">Subscription Plans</h2>
    <p class="mb-12 text-center text-xl text-gray-600">Enter your student count to calculate your monthly cost</p>

    <div class="flex flex-col items-center justify-center space-y-8 md:space-y-0">
      <div class="w-1/4 rounded-lg p-8 shadow-lg transition-all duration-200 hover:shadow-xl">
        <div class="items-left flex flex-col justify-between">
          <label for="studentCount" class="block text-sm font-medium text-gray-700">Number of Students:</label>
          <p id="errorMessage" class="hidden text-red-600">Can not be 0 or less</p>
          <input type="number" id="studentCount" class="w-full rounded-md px-4 py-2 text-xl font-bold" value="0" />
        </div>
        <div class="mb-4">
          <h3 class="text-accent-100 text-2xl font-bold">Monthly Cost:</h3>
          <div id="monthlyCost" class="text-4xl font-bold">$0</div>
          <p id="freeTierMessage" class="hidden text-green-600">Free Tier Applicable ( 200 Students or Fewer )</p>
        </div>
        <ul class="mb-8 space-y-3">
          <li class="flex items-center">
            <svg class="mr-2 h-5 w-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
              <path
                fill-rule="evenodd"
                d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                clip-rule="evenodd"
              ></path>
            </svg>
            Basic Attendance Tracking
          </li>
          <li class="flex items-center">
            <svg class="mr-2 h-5 w-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
              <path
                fill-rule="evenodd"
                d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.093a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                clip-rule="evenodd"
              ></path>
            </svg>
            QR Code Check-in
          </li>
          <li class="flex items-center">
            <svg class="mr-2 h-5 w-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
              <path
                fill-rule="evenodd"
                d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                clip-rule="evenodd"
              ></path>
            </svg>
            Advanced Reporting
          </li>
          <li class="flex items-center">
            <svg class="mr-2 h-5 w-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
              <path
                fill-rule="evenodd"
                d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                clip-rule="evenodd"
              ></path>
            </svg>
            Enrollment Management
          </li>
        </ul>
        <div id="getStartedLink"></div>

        <button id="subscribeButton" class="btn btn-primary mt-4 w-full">Subscribe Now</button>
      </div>
    </div>
  </div>
</section>

<!-- Hidden checkout form -->
<form id="checkoutForm" action="/charge" method="post" class="hidden">
  <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
  <input type="hidden" name="amount" id="amount" value="" />
  <input type="hidden" name="tier" id="tier" value="" />
  <input type="hidden" name="omiseToken" value="" />
  <input type="hidden" name="omiseSource" value="" />
</form>

<!-- Payment Result Modal -->
<div id="paymentModal" class="fixed inset-0 z-50 flex hidden items-center justify-center bg-gray-900 bg-opacity-50">
  <div class="bg-base-100 w-full max-w-md rounded-lg p-6 shadow-lg">
    <h2 class="mb-4 text-xl font-bold"><%= t('subscriptions.index.payment_status') %></h2>
    <p id="paymentModalBody" class="text-gray-700"></p>
    <div class="mt-6 flex justify-end">
      <button
        class="rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600"
        onclick="document.getElementById('paymentModal').classList.add('hidden')"
      >
        Close
      </button>
    </div>
  </div>
</div>

<script
  src="https://cdn.omise.co/omise.js"
  integrity="sha384-Ue+Uj0J/1ZGITiuYUvQgZGRWgS8ZuGIbVslPEqNh8EDJviXdDh2uWdudKLcFQBcm"
  crossorigin="anonymous"
></script>

<script>
  function updatePricing() {
    const studentCount = parseInt(document.getElementById('studentCount').value)
    let monthlyCost = 0
    let plan = 'trial'

    if (studentCount <= 0 || isNaN(studentCount)) {
      document.getElementById('getStartedLink').innerHTML = ''
      document.getElementById('errorMessage').classList.remove('hidden')
      document.getElementById('freeTierMessage').classList.add('hidden')
      return
    } else {
      document.getElementById('errorMessage').classList.add('hidden')
    }

    if (studentCount <= 20) {
      monthlyCost = 0
      plan = 'trial'
      document.getElementById('freeTierMessage').classList.remove('hidden')
    } else if (studentCount < 800) {
      monthlyCost = studentCount * 0.5
      plan = 'standard'
      document.getElementById('freeTierMessage').classList.add('hidden')
    } else {
      monthlyCost = studentCount * 0.4
      plan = 'premium'
      document.getElementById('freeTierMessage').classList.add('hidden')
    }

    document.getElementById('monthlyCost').innerText = '$' + monthlyCost
    document.getElementById('amount').value = monthlyCost * 100
    document.getElementById('getStartedLink').innerHTML = ''
    // Create a button to trigger Omise
    const btn = document.createElement('button')
    btn.type = 'button'
    btn.className = 'btn btn-primary w-full'
    btn.textContent = 'Get Started'

    btn.addEventListener('click', (event) => {
      // Set hidden fields
      document.getElementById('amount').value = monthlyCost
      document.getElementById('tier').value = plan

      // If amount is 0, just submit
      if (monthlyCost === 0) {
        document.getElementById('checkoutForm').submit()
      } else {
        // Otherwise use Omise
        OmiseCard.open({
          amount: monthlyCost,
          currency: 'USD',
          defaultPaymentMethod: 'credit_card',
          onCreateTokenSuccess: (nonce) => {
            if (nonce.startsWith('tokn_')) {
              document.querySelector('input[name="omiseToken"]').value = nonce
            } else {
              document.querySelector('input[name="omiseSource"]').value = nonce
            }
            document.getElementById('checkoutForm').submit()
          }
        })
      }
    })
  }

  document.getElementById('studentCount').addEventListener('input', updatePricing)
  updatePricing()

  document.getElementById('subscribeButton').addEventListener('click', function (event) {
    event.preventDefault()
    updatePricing() // Make sure pricing is recalculated before submit

    const amount = parseInt(document.getElementById('amount').value)
    const tier = document.getElementById('tier').value

    if (amount === 0) {
      document.getElementById('checkoutForm').submit()
    } else {
      OmiseCard.open({
        amount,
        currency: 'USD',
        defaultPaymentMethod: 'credit_card',
        onCreateTokenSuccess: (nonce) => {
          if (nonce.startsWith('tokn_')) {
            document.querySelector('input[name="omiseToken"]').value = nonce
          } else {
            document.querySelector('input[name="omiseSource"]').value = nonce
          }
          document.getElementById('checkoutForm').submit()
        }
      })
    }
  })

  OmiseCard.configure({ publicKey: 'pkey_test_62unknn2ef7aol8k7nm' })

  document.querySelectorAll('.select-tier').forEach((button) => {
    button.addEventListener('click', (event) => {
      const amount = document.getElementById('')
      const tier = event.target.getAttribute('data-tier')

      document.getElementById('amount').value = amount
      document.getElementById('tier').value = tier

      if (amount === '0') {
        document.getElementById('checkoutForm').submit()
      } else {
        OmiseCard.open({
          amount: parseInt(amount),
          currency: 'USD',
          defaultPaymentMethod: 'credit_card',
          onCreateTokenSuccess: (nonce) => {
            if (nonce.startsWith('tokn_')) {
              document.querySelector('input[name="omiseToken"]').value = nonce
              // redirect to success modal
            } else {
              document.querySelector('input[name="omiseSource"]').value = nonce
            }
            document.getElementById('checkoutForm').submit()
          }
        })
      }
    })
  })

  document.getElementById('checkoutForm').addEventListener('submit', (event) => {
    event.preventDefault()

    document.getElementById('paymentModalBody').innerText = 'Processing payment...'
    document.getElementById('paymentModal').classList.remove('hidden')

    fetch(event.target.action, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
        'X-CSRF-Token': document.querySelector('input[name="authenticity_token"]').value
      },
      body: new URLSearchParams(new FormData(event.target))
    })
      .then((response) => {
        // Hide the loading indicator
        document.getElementById('paymentModal').classList.add('hidden')

        // Replace the entire page content with the response from the server
        return response.text().then((html) => {
          document.body.innerHTML = html
        })
      })
      .catch((error) => {
        document.getElementById('paymentModal').classList.add('hidden')
        alert('Network error: ' + error.message)
      })
  })
</script>

<head>
  <title>Subscriptions</title>
  <script
    src="https://cdn.omise.co/omise.js"
    integrity="sha384-Ue+Uj0J/1ZGITiuYUvQgZGRWgS8ZuGIbVslPEqNh8EDJviXdDh2uWdudKLcFQBcm"
    crossorigin="anonymous"
    defer
  ></script>
</head>
<% content_for :title, t('subscriptions.index.page_title') %>

<section class="py-12" id="pricing"><%= render 'shared/subscription_form', show_subscribe_button: true %></section>

<!-- Hidden checkout form -->
<form id="checkoutForm" action="/charge" method="post" class="hidden">
  <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
  <input type="hidden" name="amount" id="amount" value="" />
  <input type="hidden" name="tier" id="tier" value="" />
  <input type="hidden" name="omiseToken" value="" />
  <input type="hidden" name="omiseSource" value="" />
</form>

<!-- Payment Result Modal -->
<div id="paymentModal" class="fixed inset-0 z-50 flex hidden items-center justify-center bg-gray-900 bg-opacity-50">
  <div class="bg-base-100 w-full max-w-md rounded-lg p-6 shadow-lg">
    <h2 class="mb-4 text-xl font-bold"><%= t('subscriptions.index.payment_status') %></h2>
    <p id="paymentModalBody" class="text-gray-700"></p>
    <div class="mt-6 flex justify-end">
      <button
        class="rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600"
        onclick="document.getElementById('paymentModal').classList.add('hidden')"
      >
        Close
      </button>
    </div>
  </div>
</div>

<script
  src="https://cdn.omise.co/omise.js"
  integrity="sha384-Ue+Uj0J/1ZGITiuYUvQgZGRWgS8ZuGIbVslPEqNh8EDJviXdDh2uWdudKLcFQBcm"
  crossorigin="anonymous"
></script>

<script>
  function updatePricing() {
    const studentCount = parseInt(document.getElementById('studentCount').value)
    let monthlyCost = 0
    let plan = 'trial'

    if (studentCount <= 0 || isNaN(studentCount)) {
      document.getElementById('getStartedLink').innerHTML = ''
      document.getElementById('errorMessage').classList.remove('hidden')
      document.getElementById('freeTierMessage').classList.add('hidden')
      return
    } else {
      document.getElementById('errorMessage').classList.add('hidden')
    }

    if (studentCount <= 20) {
      monthlyCost = 0
      plan = 'trial'
      document.getElementById('freeTierMessage').classList.remove('hidden')
    } else if (studentCount < 800) {
      monthlyCost = studentCount * 0.5
      plan = 'standard'
      document.getElementById('freeTierMessage').classList.add('hidden')
    } else {
      monthlyCost = studentCount * 0.4
      plan = 'premium'
      document.getElementById('freeTierMessage').classList.add('hidden')
    }

    document.getElementById('monthlyCost').innerText = '$' + monthlyCost
    document.getElementById('amount').value = monthlyCost * 100
    document.getElementById('getStartedLink').innerHTML = ''
    // Create a button to trigger Omise
    const btn = document.createElement('button')
    btn.type = 'button'
    btn.className = 'btn btn-primary w-full'
    btn.textContent = 'Get Started'

    btn.addEventListener('click', (event) => {
      // Set hidden fields
      document.getElementById('amount').value = monthlyCost
      document.getElementById('tier').value = plan

      // If amount is 0, just submit
      if (monthlyCost === 0) {
        document.getElementById('checkoutForm').submit()
      } else {
        // Otherwise use Omise
        OmiseCard.open({
          amount: monthlyCost,
          currency: 'USD',
          defaultPaymentMethod: 'credit_card',
          onCreateTokenSuccess: (nonce) => {
            if (nonce.startsWith('tokn_')) {
              document.querySelector('input[name="omiseToken"]').value = nonce
            } else {
              document.querySelector('input[name="omiseSource"]').value = nonce
            }
            document.getElementById('checkoutForm').submit()
          }
        })
      }
    })
  }

  document.getElementById('studentCount').addEventListener('input', updatePricing)
  updatePricing()

  document.getElementById('subscribeButton').addEventListener('click', function (event) {
    event.preventDefault()
    updatePricing() // Make sure pricing is recalculated before submit

    const amount = parseInt(document.getElementById('amount').value)
    const tier = document.getElementById('tier').value

    if (amount === 0) {
      document.getElementById('checkoutForm').submit()
    } else {
      OmiseCard.open({
        amount,
        currency: 'USD',
        defaultPaymentMethod: 'credit_card',
        onCreateTokenSuccess: (nonce) => {
          if (nonce.startsWith('tokn_')) {
            document.querySelector('input[name="omiseToken"]').value = nonce
          } else {
            document.querySelector('input[name="omiseSource"]').value = nonce
          }
          document.getElementById('checkoutForm').submit()
        }
      })
    }
  })

  OmiseCard.configure({ publicKey: 'pkey_test_62unknn2ef7aol8k7nm' })

  document.querySelectorAll('.select-tier').forEach((button) => {
    button.addEventListener('click', (event) => {
      const amount = document.getElementById('')
      const tier = event.target.getAttribute('data-tier')

      document.getElementById('amount').value = amount
      document.getElementById('tier').value = tier

      if (amount === '0') {
        document.getElementById('checkoutForm').submit()
      } else {
        OmiseCard.open({
          amount: parseInt(amount),
          currency: 'USD',
          defaultPaymentMethod: 'credit_card',
          onCreateTokenSuccess: (nonce) => {
            if (nonce.startsWith('tokn_')) {
              document.querySelector('input[name="omiseToken"]').value = nonce
              // redirect to success modal
            } else {
              document.querySelector('input[name="omiseSource"]').value = nonce
            }
            document.getElementById('checkoutForm').submit()
          }
        })
      }
    })
  })

  document.getElementById('checkoutForm').addEventListener('submit', (event) => {
    event.preventDefault()

    document.getElementById('paymentModalBody').innerText = 'Processing payment...'
    document.getElementById('paymentModal').classList.remove('hidden')

    fetch(event.target.action, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
        'X-CSRF-Token': document.querySelector('input[name="authenticity_token"]').value
      },
      body: new URLSearchParams(new FormData(event.target))
    })
      .then((response) => {
        // Hide the loading indicator
        document.getElementById('paymentModal').classList.add('hidden')

        // Replace the entire page content with the response from the server
        return response.text().then((html) => {
          document.body.innerHTML = html
        })
      })
      .catch((error) => {
        document.getElementById('paymentModal').classList.add('hidden')
        alert('Network error: ' + error.message)
      })
  })
</script>
